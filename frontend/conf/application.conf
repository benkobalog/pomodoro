backend.address = "http://localhost:9001"


play.filters.headers.contentSecurityPolicy
  = "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://ajax.googleapis.com http://localhost:9001;"
play.filters.disabled+=play.filters.csrf.CSRFFilter

play.filters.enabled += play.filters.cors.CORSFilter
play.filters.cors {
  pathPrefixes = ["*", "/pomodoro", "/pomodoroState", "/pomodoroStart", "/pomodoroFinish"]
  allowedOrigins = [${backend.address}]
  allowedHttpMethods = ["GET", "POST", "PATCH"]
  allowedHttpHeaders = ["*"]
  supportsCredentials = true
}

play.http.session = {
  # The cookie name
  cookieName = "POMODORO_SESSION"

  # Whether the secure attribute of the cookie should be set to true
  secure = false

  # Whether the HTTP only attribute of the cookie should be set to true
  httpOnly = false
}

session = {
  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = null

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  sameSite = "lax"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  domain = null

  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 5 minutes

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}